#!/usr/bin/env bash
format="%b\n"
divider================================== #Just to make things pretty
# Functions go here

## pdflatex
function makepdflatex {
    filename=${texfile//.tex}
    printf $format $divider$divider
    printf $format "Scaffolding for $texer"
    printf $format "PAPER=$filename">Makefile
    printf $format "all:\n\t pdflatex \$(PAPER).tex">>Makefile
    printf $format $divider$divider
    PS3="Do you want to clean autogenerated build files?"
    select yn in "yes" "no"
    do
        case $yn in
            yes) printf $format "clean:\n\t rm *.aux *.bbl *.log *.out">>Makefile;break;
                 ;;
            no) printf $format "You'll need to remove autogenerated build files manually, if you so wish.";break
                ;;
        esac
    done
    printf $format $divider$divider
    #printf $format "pdf:pdflatex \$(PAPER)">>Makefile
}

## make texers
function maketex {
    filename=${texfile}
    printf $format $divider$divider
    printf $format "Scaffolding for $texer"
    printf $format "PAPER=$filename">Makefile
    printf $format $divider$divider
    PS3="Select format to output to"
    select outfiletype in "pdf" "ps" "dvi"
    do
        case $outfiletype in
            pdf)printf $format "all:\n\t $texer --$outfiletype \$(PAPER).tex">>Makefile;break;
                ;;
            dvi)printf $format "all:\n\t $texer --$outfiletype \$(PAPER).tex">>Makefile;break;
                ;;
            ps)printf $format "all:\n\t $texer --$outfiletype \$(PAPER).tex">>Makefile;break;
               ;;
        esac
    done
    printf $format $divider$divider
    #printf $format "all:\n\t $texer \$(PAPER).tex">>Makefile
    PS3="Do you want to clean autogenerated build files?"
    select yn in "yes" "no"
    do
        case $yn in
            yes) printf $format "clean:\n\t rm *.aux *.bbl *.log *.out">>Makefile;break;
                 ;;
            no) printf $format "You'll need to remove autogenerated build files manually, if you so wish.";break
                ;;
        esac
    done
    printf $format $divider$divider
}
# Actual code

## Set up working directory
printf $format "$divider$divider"
printf $format "$divider$divider"
printf $format "$divider$divider"
printf "%b\n" "\t Welcome to AutoTeXeR."" I will be your guide."
printf $format "$divider$divider"
read -p "Type in the path of the directory you want to work in: " directory;
#directory=${directory-"."}
echo "$directory"
if [ -r "$directory" ];
then
    printf $format "Found $directory";
else
    read -p "Directory not found. Do you want to create it? [yn] " yn;
    case $yn in
        [yY]*)mkdir -p $directory;;
        [nN]*) printf $format "Nothing created. Defaulting to current directory";directory=".";;
    esac
fi
printf $format "$divider$divider"
######################################################################
## Set up Working files
shopt -s nullglob

PS3="These TeX files were found in $directory. Do you want to use any of these?";
filearray=("$directory/"*.tex)
echo "${filearray[@]}"
if [ -s ${filearray[@]} ]
then
    select texfile in "$(basename ${filearray[@]//.tex})";
    do
        printf $format "$texfile";break;  # $texfile already contains the file extension
    done
fi

printf $format "$divider$divider"
### If no working files found, offer to create
if [ ${#filearray[@]} -eq 0 ]
then
    read -p "No files found. Let's make one! Think of a name (no pressure, we can just default to a name for now. Hit ENTER with or without typing a name)\n DON'T TYPE THE FILE EXTENSION (.TEX)" texfile;
    texfile=${texfile:-paper}.tex
    #touch $texfile.tex
fi
printf $format "$divider$divider"
printf $format "$divider$divider"
##############################################################################
## Select compiler to use
compilers=("latex" "xelatex" "pdflatex" "latexmk")

PS3="Select preferred compilation method: ";
select texer in "${compilers[@]}";  #Following section runs compiler specific make functions.
do export PS3;
    case $texer in
        "latex")maketex;break
                ;;
        "pdflatex") makepdflatex;break
                   ;;
        "latexmk") maketex;break
                  ;;
        "xelatex") maketex;break;
                   ;;
        *)printf $format "Type in a number from the options above.";
    esac
done
printf $format "$divider$divider"
if [ ! -s $texfile ]
then
    printf "%s\n" "\\documentclass{article}">>$texfile
    printf "%s\n" "\\begin{document}">>$texfile
    printf "%s\n" "\\end{document}">>$texfile
fi
